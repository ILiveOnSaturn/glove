###09.01.2023###
it seems that i cannot use tensorflow with micro controllers together with circuitpython, or at least not in an easy way, so for now i will use the opportunity and code everything in c/c++.
i will use the pico sdk and tflite-micro generator to build the project. (https://github.com/raspberrypi/pico-tflmicro, https://github.com/tensorflow/tflite-micro)
with the imu i have 2 options, write a new interface or use the one written for me by the ebay guy, only problem is that its written for arduino, so ill need to check.
for hid interface, ill use tinyusb, as its the only option i have, even though the documentations are nearly empty. ill have to learn from the examples or some weird tutorial online. make sure you learn about DEVICE MODE and not host mode. (https://docs.tinyusb.org/en/latest/reference/getting_started.html)
i need to learn how to use cmake since it seems ill be using it for this project.
why is c so hellish?

###11.01.2023###
i tried to make the onboard code ready but there is no way of knowing without building the glove, oh well.

###15.01.2023###
i just tried to make the save function in the training program and i realized that i need to rethink about how the array works. fix this.

###16.01.2023###
i am figuring out little by little how tiny usb works. its kinda cool once u know it. basically there is a config file and a descriptor file and rn im currently in the config file so there are a bunch of defines and stuff. the only thing im having a hard time figuring out is the rhport.
ok so rhport is basically for boards who have multiple usb connections and its used to choose which port i want to use. ig ill go with port 0 for now.

###17.01.2023###
finally done with usb_descriptor.c, now i need to add the cool functions for the main program.

###18.01.2023###
i continued with the glove.c program and i got stuck at the tinyusb functions since there is no documentation. 
i found this cool project on github which i could study from: https://github.com/diminDDL/picoMacro/tree/main/PicoMacroC
the lack of information is literally killing me rn. im trying to find information about the get_report and what it sends but i found little to no information.
found this website that talks kind of in depth about the kernel and the hid core: https://www.kernel.org/doc/Documentation/hid/hid-transport.txt
there's no way i can continue making code for the pico without any debugger. maybe i should do one with the cdc com (preferred way) or i should do one with uart. whatever is possible.
i have looked a bit and uart seems like the better and faster option. it can make it so i could actually read the errors and not just the printf. i think. only problem with that is the cables that will go out of the casing.

###19.01.2023###
i have tried soldering the pico to use uart debugging but for some reason in my pc it crashes and in my raspberry pi 4b it doesn't, so it isnt really worth using uart debugging. now i need to learn how to do cdc com. fuck.

###20.01.2023###
i added cdc connection for debugging, just need to see if it works and then build the glove.

###21.01.2023###
i did it i did it i did it i did it i did it i did it i fucking made debugging work lets gooooooooooooooooooo!!!!!!!!!!!!!!!!

###31.01.2023###
i added the hall effect sensors to the glove and the trainer is fully functional i think, so um, cool.
just a note to remember to that i need to add [] to the data.json file at the end.

###03.02.2023###
i tried connecting the hall effect to the raspi 4b+, but i didnt get anything meaningful because of two things: 1. the 4b+ doesnt have adc pins and 2. apparantly current makes wires have magnetic field but its so small it shouldnt matter or something???
anyways im gonna connect the hall effect directly to the pico (if it goes wrong ill cry) and im gonna see what will happen.

###06.02.2023###
i built the glove and its almost done, just need to add the pico in.
i started making the imu handler and i need to test it once the glove is done. it is literally hell working with registers.

